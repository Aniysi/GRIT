[
    {
    "command": "git commit",
    "examples": [
        {
        "command": "git commit",
        "description": "Voglio salvare i cambiamenti che ho messo in staging creando un nuovo commit.",
        "keywords": ["salvare", "modifiche", "nuovo commit", "staging", "git commit"]
        },
        {
        "command": "git commit -m \"Fix bug nella funzione di login\"",
        "description": "Voglio fare un commit con un messaggio chiaro e descrittivo, tutto in un solo comando.",
        "keywords": ["messaggio", "commit veloce", "descrizione", "singolo comando", "commit"]
        },
        {
        "command": "git commit --amend --no-edit",
        "description": "Voglio aggiungere nuovi file all’ultimo commit senza cambiare il messaggio già scritto.",
        "keywords": ["aggiungere", "file", "amend", "senza messaggio", "commit precedente", "modifcare"]
        },
        {
        "command": "git commit -a -m \"Aggiorna documentazione\"",
        "description": "Voglio fare un commit che include direttamente tutti i file modificati senza passare per lo staging.",
        "keywords": ["tutti i file", "senza staging", "commit rapido", "modifiche automatiche"]
        },
        {
        "command": "git commit --dry-run",
        "description": "Voglio controllare cosa verrebbe incluso in un commit, senza eseguirlo davvero.",
        "keywords": ["verifica", "simulare", "test", "commit", "dry run"]
        }
        ]
    },
    {
    "command": "git branch",
    "examples": [
        {
        "command": "git branch",
        "description": "Voglio vedere la lista di tutti i branch locali disponibili nel mio repository.",
        "keywords": ["vedere", "lista", "branch", "locali", "git branch"]
        },
        {
        "command": "git branch nome-branch",
        "description": "Voglio creare un nuovo branch per iniziare a lavorare su una nuova funzionalità.",
        "keywords": ["creare", "nuovo branch", "feature", "iniziare", "lavoro"]
        },
        {
        "command": "git checkout -b nome-branch",
        "description": "Voglio creare un nuovo branch e passarci subito per iniziare a lavorarci.",
        "keywords": ["nuovo branch", "checkout", "inizio", "spostarsi", "subito"]
        },
        {
        "command": "git branch -d nome-branch",
        "description": "Voglio cancellare un branch locale che non mi serve più e che ho già unito.",
        "keywords": ["cancellare", "branch", "locale", "non serve", "rimuovere"]
        },
        {
        "command": "git branch -D nome-branch",
        "description": "Voglio forzare la cancellazione di un branch locale anche se non è stato unito.",
        "keywords": ["forzare", "cancellazione", "branch", "non unito", "eliminare"]
        },
        {
        "command": "git branch -r",
        "description": "Voglio vedere tutti i branch remoti disponibili nel repository remoto.",
        "keywords": ["remoti", "vedere", "branch remoti", "repository remoto", "lista"]
        },
        {
        "command": "git branch -a",
        "description": "Voglio vedere sia i branch locali che quelli remoti in un’unica lista.",
        "keywords": ["tutti i branch", "locali", "remoti", "elenco completo", "visualizzare"]
        },
        {
        "command": "git branch --merged",
        "description": "Voglio sapere quali branch sono già stati uniti al branch attuale.",
        "keywords": ["branch uniti", "merge completato", "controllo", "già unito"]
        },
        {
        "command": "git branch --no-merged",
        "description": "Voglio vedere i branch che non sono ancora stati uniti al mio branch attuale.",
        "keywords": ["non uniti", "da unire", "merge mancanti", "controllare"]
        }
    ]
    },
    {
    "command": "git add",
    "examples": [
        {
        "command": "git add .",
        "description": "Voglio aggiungere tutti i file modificati all'area di staging, ma non voglio includere quelli nuovi non tracciati.",
        "keywords": ["aggiungere", "tutti", "modificati", "escludere", "non tracciati", "staging"]
        },
        {
        "command": "git add '*.js'",
        "description": "Voglio aggiungere all’area di staging solo i file con estensione .js perché sto lavorando solo su quelli.",
        "keywords": ["aggiungere", "file js", "staging", "estensione", "filtrare"]
        },
        {
        "command": "git add -p",
        "description": "Voglio selezionare solo alcune modifiche specifiche dentro un file da aggiungere allo staging.",
        "keywords": ["aggiungere", "parzialmente", "selezionare", "pezzi", "modifiche", "staging"]
        },
        {
        "command": "git restore --staged nomefile",
        "description": "Voglio togliere un file dallo staging perché non voglio più includerlo nel prossimo commit.",
        "keywords": ["rimuovere", "staging", "non committare", "togliere", "restore"]
        },
        {
        "command": "git add nomefile",
        "description": "Voglio aggiungere un file che è stato eliminato in modo da includere la sua rimozione nel prossimo commit.",
        "keywords": ["aggiungere", "file eliminato", "tracciare", "rimozione", "commit"]
        }
    ]
    },
    {
    "command": "git checkout",
    "examples": [
        {
        "command": "git checkout nome-branch",
        "description": "Voglio passare a un branch che esiste già per continuare a lavorare lì.",
        "keywords": ["cambiare branch", "passare", "esistente", "checkout", "spostarsi"]
        },
        {
        "command": "git checkout -b nuovo-branch",
        "description": "Voglio creare un nuovo branch e iniziare subito a lavorarci.",
        "keywords": ["creare branch", "nuovo", "iniziare", "checkout", "branch"]
        },
        {
        "command": "git checkout nomefile",
        "description": "Voglio ripristinare un file modificato riportandolo allo stato dell'ultimo commit.",
        "keywords": ["ripristinare file", "ultimo commit", "annullare modifiche", "checkout file"]
        },
        {
        "command": "git checkout commit_id -- nomefile",
        "description": "Voglio vedere una versione precedente di un file senza cambiare branch.",
        "keywords": ["file vecchio", "versione precedente", "commit specifico", "checkout", "senza cambiare branch"]
        },
        {
        "command": "git checkout HEAD~1",
        "description": "Voglio tornare temporaneamente al commit precedente per vedere com’era il progetto.",
        "keywords": ["tornare indietro", "commit precedente", "checkout", "revisione", "HEAD"]
        },
        {
        "command": "git checkout -- .",
        "description": "Voglio annullare tutte le modifiche locali e riportare i file allo stato dell’ultimo commit.",
        "keywords": ["annulla tutto", "ripristina file", "checkout", "reset modifiche", "ultimo commit"]
        }
    ]
    },
    {
  "command": "git log",
  "examples": [
        {
        "command": "git log --pretty=oneline",
        "description": "Voglio vedere solo autore e messaggio per ogni commit, in una sola riga.",
        "keywords": ["log", "autore", "messaggio", "lista commit", "oneline", "storico"]
        },
        {
        "command": "git log --pretty=format:\"%h %ad %s\" --date=short",
        "description": "Come posso elencare i commit mostrando solo hash abbreviato, data e messaggio?",
        "keywords": ["hash", "data", "messaggio", "commits", "formato personalizzato", "log"]
        },
        {
        "command": "git log --name-only",
        "description": "Voglio vedere quali file sono stati modificati in ogni commit.",
        "keywords": ["file modificati", "log", "nomi file", "commit", "cambiamenti"]
        },
        {
        "command": "git log --author=\"nome\"",
        "description": "Come faccio a vedere solo i commit fatti da un certo autore?",
        "keywords": ["autore", "filtra commit", "log per autore", "storico", "git log"]
        },
        {
        "command": "git log --graph --oneline --all",
        "description": "Voglio vedere il log con una visualizzazione grafica dei branch.",
        "keywords": ["visualizzazione grafica", "rami", "log", "graph", "commit", "storico"]
        },
        {
        "command": "git log --pretty=format:\"%s\"",
        "description": "Come posso visualizzare solo i messaggi dei commit, senza dettagli extra?",
        "keywords": ["solo messaggi", "log", "commit", "descrizione", "formato semplice"]
        },
        {
        "command": "git log --since=\"2023-01-01\" --until=\"2023-12-31\"",
        "description": "Voglio filtrare il log per commit fatti in una certa data o intervallo di tempo.",
        "keywords": ["data", "intervallo", "filtro", "storico", "commits", "log"]
        },
        {
        "command": "git log -p nomefile",
        "description": "Come faccio a vedere l'ultimo commit che ha modificato un certo file?",
        "keywords": ["ultimo commit", "file specifico", "modifiche", "log dettagliato", "git log"]
        }
    ]
    },
    {
    "command": "git remote",
    "examples": [
        {
        "command": "git remote -v",
        "description": "Come posso vedere tutti i remoti configurati nel mio repository?",
        "keywords": ["remoti", "elenco", "origin", "url", "git remote", "visualizza"]
        },
        {
        "command": "git remote add origin https://example.com/repo.git",
        "description": "Voglio aggiungere un nuovo remoto con un URL specifico.",
        "keywords": ["aggiungi", "remoto", "origin", "nuovo", "url", "git remote add"]
        },
        {
        "command": "git remote rename origin upstream",
        "description": "Come faccio a rinominare un remoto esistente?",
        "keywords": ["rinomina", "remoto", "origin", "upstream", "git remote rename"]
        },
        {
        "command": "git remote set-url origin https://example.com/nuovo.git",
        "description": "Voglio cambiare l’URL associato a un remoto.",
        "keywords": ["cambiare", "url", "remoto", "origin", "modifica", "git remote set-url"]
        },
        {
        "command": "git remote remove origin",
        "description": "Come posso rimuovere un origin remoto che non uso più?",
        "keywords": ["rimuovere", "remoto", "origin", "elimina", "git remote remove"]
        },
        {
        "command": "git remote get-url origin",
        "description": "Come faccio a vedere l’URL del repository remoto configurato?",
        "keywords": ["vedere", "url", "remoto", "origin", "git remote get-url"]
        }
    ]
    },
    {
    "command": "git status",
    "examples": [
        {
        "command": "git status",
        "description": "Come posso vedere quali file sono stati modificati ma non ancora aggiunti allo staging. Voglio controllare lo stato attuale del mio repository",
        "keywords": ["modificati", "non in area staging", "stato", "git status", "file modificati", "controlla stato", "verifica", "conflitti"]
        }
    ]
    },
    {
    "command": "git diff",
    "examples": [
        {
        "command": "git diff",
        "description": "Come posso vedere le modifiche fatte rispetto all’ultimo commit?",
        "keywords": ["differenze", "ultimo commit", "modifiche locali", "non in staging", "git diff", "differenze"]
        },
        {
        "command": "git diff <branch1> <branch2>",
        "description": "Voglio confrontare le modifiche tra due branch diversi.",
        "keywords": ["confronto", "branch", "differenze tra branch", "git diff", "versioni"]
        },
        {
        "command": "git diff --staged",
        "description": "Come faccio a vedere solo le modifiche già aggiunte allo staging?",
        "keywords": ["staging", "modifiche aggiunte", "area di staging", "confronto", "git diff --staged"]
        },
        {
        "command": "git diff path/to/file",
        "description": "Voglio visualizzare le modifiche in un file specifico.",
        "keywords": ["modifiche file", "singolo file", "diff su file", "git diff", "visualizzare cambiamenti", "differenze"]
        },
        {
        "command": "git diff <commit1> <commit2>",
        "description": "Come posso confrontare due commit per vedere cosa è cambiato?",
        "keywords": ["differenze commit", "confronto", "versioni diverse", "git diff", "contenuto cambiato", "differenze"]
        },
        {
        "command": "git diff origin/main",
        "description": "Voglio vedere le differenze tra la mia copia locale e il ramo remoto.",
        "keywords": ["remoto", "confronto", "differenze", "origin", "git diff", "modifiche non pushate"]
        }
    ]
    },
    {
    "command": "git reset",
    "examples": [
        {
        "command": "git reset HEAD <file>",
        "description": "Come posso rimuovere un file dallo staging senza perdere le modifiche?",
        "keywords": ["rimuovere da staging", "senza perdere modifiche", "git reset", "HEAD", "file singolo", "togliere"]
        },
        {
        "command": "git reset --soft HEAD~1",
        "description": "Voglio annullare l’ultimo commit ma mantenere i file modificati.",
        "keywords": ["annullare commit", "mantenere modifiche", "soft reset", "git reset", "HEAD~1"]
        },
        {
        "command": "git reset --hard <commit>",
        "description": "Come faccio a riportare il repository a uno stato precedente, cancellando anche le modifiche locali?",
        "keywords": ["ripristino", "cancellare modifiche locali", "reset completo", "git reset", "hard", "stato"]
        },
        {
        "command": "git reset --hard HEAD~2",
        "description": "Voglio annullare gli ultimi due commit e riportare tutto com’era prima.",
        "keywords": ["annulla", "annullare", "ripristinare", "ripristina", "commit", "reset totale", "git reset", "hard"]
        },
        {
        "command": "git reset <file1> <file2>",
        "description": "Come posso togliere dallo staging solo alcuni file, non tutti?",
        "keywords": ["rimuovere da staging", "rimuovi", "solo", "file", "git reset", "parziale", "file specifici"]
        }
    ]
    },{
    "command": "git revert",
    "examples": [
        {
        "command": "git revert <commit>",
        "description": "Come posso annullare un commit già pubblicato senza riscrivere la cronologia?",
        "keywords": ["annulla", "commit", "pubblicato", "revert", "cronologia", "errore", "ripristina", "push", "remote"]
        },
        {
        "command": "git revert <commit1> <commit2> <commit3>",
        "description": "Come faccio a fare il revert di più commit in una volta sola?",
        "keywords": ["revert", "più", "commit", "annulla", "modifiche", "serie", "storico", "rollback", "ripeti", "correggi"]
        },
        {
        "command": "git revert -m 1 <merge_commit>",
        "description": "Voglio annullare un merge commit senza cancellare la cronologia dei branch.",
        "keywords": ["merge", "revert", "annulla", "commit", "cronologia", "branch", "unione", "ripristina", "errore", "conflict"]
        }
    ]
    },
    {
    "command": "git merge",
    "examples": [
        {
        "command": "git merge feature-branch",
        "description": "Come posso unire un branch di funzionalità nel branch principale?",
        "keywords": ["unisci", "merge", "branch", "main", "integra", "cambia", "modifica", "aggiungi", "sviluppo"]
        },
        {
        "command": "git merge --ff-only feature-branch",
        "description": "Voglio eseguire un merge veloce solo se non ci sono divergenze.",
        "keywords": ["merge", "veloce", "ff", "fast", "forward", "senza", "conflitti", "automatico", "unisci", "differenza", "divergenze"]
        },
        {
        "command": "git merge --no-commit --no-ff feature-branch",
        "description": "Come posso vedere in anticipo cosa cambierà se faccio un merge?",
        "keywords": ["merge", "preview", "cambiamenti", "verifica", "no commit", "controlla", "simula", "diff", "modifiche", "stato"]
        }
    ]
    },
    {
    "command": "git push",
    "examples": [
        {
        "command": "git push",
        "description": "Come posso inviare i miei commit locali al ramo remoto?",
        "keywords": ["push", "invia", "commit", "remoto", "upload", "pubblica", "carica", "branch", "git", "origin"]
        },
        {
        "command": "git push -u origin nome-branch",
        "description": "Voglio fare il push di un nuovo branch al repository remoto.",
        "keywords": ["push", "nuovo", "branch", "remoto", "pubblica", "origin", "upload", "traccia", "upstream", "invio"]
        },
        {
        "command": "git push --force",
        "description": "Come faccio a forzare un push sovrascrivendo i cambiamenti remoti?",
        "keywords": ["push", "forza", "sovrascrivi", "force", "remoto", "override", "commit", "conflitto", "errore", "problema"]
        },
        {
        "command": "git push origin tag-nome",
        "description": "Voglio fare il push solo di un tag specifico.",
        "keywords": ["push", "tag", "remoto", "pubblica", "specifico", "versione", "rilascio", "git", "origin", "carica"]
        },
        {
        "command": "git push origin --delete nome-branch",
        "description": "Come posso eliminare un branch remoto che non mi serve più?",
        "keywords": ["elimina", "branch", "remoto", "cancella", "push", "delete", "origin", "rimuovi", "nome", "git"]
        }
    ]
    }

    


]